version: '3'

networks:
    mylocal:
        driver: bridge
services:
  rates:
    build:
      context: ./
      dockerfile: ./rates_service/Dockerfile
    image: kata:rates
    container_name: rates
    ports:
      - "127.0.0.1:8080:${HTTP_PORT}"
      - "127.0.0.1:9090:${GRPC_PORT}"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    networks:
      - mylocal
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 200M
  db:
    container_name: db
    image: postgres:14.12-alpine
    environment:
    # специальные переменные окружения для образов postgres, про них на: https://hub.docker.com/_/postgres
      # обязательная (не учитывая траст) переменная
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    ports:
        - "127.0.0.1:5432:5432"
    # проверка работоспособности БД (остановка/перезапуск при неудачно проверке)
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_PASSWORD}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    # постоянный перезапуск контейнера до остановки командой
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 200M
    networks:
      - mylocal
  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.53.1
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "127.0.0.1:1010:9090"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 200M
    networks:
      - mylocal